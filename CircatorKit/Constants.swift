//
//  Constants.swift
//  Circator
//
//  Created by Yanif Ahmad on 2/15/16.
//  Copyright Â© 2016 Yanif Ahmad, Tom Woolf. All rights reserved.
//

import Foundation
import HealthKit

/**
 This maintains the constants and strings needed for Metabolic Compass. We tie this into the options and recommendations settings in the control panel.
 
 */
public struct UserProfile {

    public static let sharedInstance = UserProfile()

    public let emailIdx : Int = 0
    public let passwIdx : Int = 1
    public let fnameIdx : Int = 2
    public let lnameIdx : Int = 3
    public let updateableIdx : Int = 4

    public let requiredRange      : Range = 0..<8
    public let updateableReqRange : Range = 4..<8
    public let recommendedRange   : Range = 8..<13
    public let optionalRange      : Range = 13..<30
    public let updateableRange    : Range = 4..<30

    public let profileFields : [String]! = [
        "Email",
        "Password",
        "First name",
        "Last name",
        "Sex",
        "Age",
        "Weight",
        "Height",
        "Usual sleep",
        "Estimated bmi",
        "Resting heartrate",
        "Systolic blood pressure",
        "Step count",
        "Active energy",
        "Awake time w/light",
        "Fasting",
        "Eating",
        "Calorie intake",
        "Protein intake",
        "Carbohydrate intake",
        "Sugar intake",
        "Fiber intake",
        "Fat intake",
        "Saturated fat",
        "Monounsaturated fat",
        "Polyunsaturated fat",
        "Cholesterol",
        "Salt",
        "Caffeine",
        "Water"]

    public let profilePlaceholders : [String]! = [
        "example@gmail.com",
        "Required",
        "Jane or John",
        "Doe",
        "Female or male",
        "24",
        "160 lbs",
        "180 cm",
        "7 hours",
        "25",
        "60 bpm",
        "120",
        "6000 steps",
        "2750 calories",
        "12 hours",
        "12 hours",
        "12 hours",
        "2757(m) or 1957(f)",
        "88.3(m) or 71.3(f)",
        "327(m) or 246.3(f)",
        "143.3(m) or 112(f)",
        "20.6(m) or 16.2(f)",
        "103.2(m) or 73.1(f)",
        "33.4(m) or 23.9(f)",
        "36.9(m) or 25.7(f)",
        "24.3(m) or 17.4(f)",
        "352(m) or 235.7(f)",
        "4560.7(m) or 3187.3(f)",
        "166.4(m) or 142.7(f)",
        "5(m) or 4.7(f)"
    ]

    public let profileMapping : [String: String]! = [
        "Email"                    : "email",
        "Password"                 : "password",
        "First name"               : "firstname",
        "Last name"                : "lastname",
        "Sex"                      : "sex",
        "Age"                      : "age",
        "Weight"                   : "weight",
        "Height"                   : "height",
        "Usual sleep"              : "sleep",
        "Estimated bmi"            : "bmi",
        "Resting heartrate"        : "heartrate",
        "Systolic blood pressure"  : "systolic",
        "Step count"               : "steps",
        "Active energy"            : "energy",
        "Awake time w/light"       : "awake",
        "Fasting"                  : "fasting",
        "Eating"                   : "eating",
        "Calorie intake"           : "calories",
        "Protein intake"           : "protein",
        "Carbohydrate intake"      : "carbs",
        "Sugar intake"             : "sugar",
        "Fiber intake"             : "fiber",
        "Fat intake"               : "fat",
        "Saturated fat"            : "satfat",
        "Monounsaturated fat"      : "monfat",
        "Polyunsaturated fat"      : "polyfat",
        "Cholesterol"              : "cholesterol",
        "Salt"                     : "salt",
        "Caffeine"                 : "caffeine",
        "Water"                    : "water"
    ]

    public var updateableMapping : [String: String]! {
        return Dictionary(pairs: profileFields[4..<29].map { k in return (k, profileMapping[k]!) })
    }

}

/*
 * HealthKit constants
 */

public struct HMConstants
{
    public static let sharedInstance = HMConstants()

    // Note: these are in alphabetical order within each type.
    public let healthKitTypesToRead : Set<HKObjectType>? = [
        HKObjectType.categoryTypeForIdentifier(HKCategoryTypeIdentifierSleepAnalysis)!,
        HKObjectType.categoryTypeForIdentifier(HKCategoryTypeIdentifierAppleStandHour)!,
        HKObjectType.characteristicTypeForIdentifier(HKCharacteristicTypeIdentifierBloodType)!,
        HKObjectType.characteristicTypeForIdentifier(HKCharacteristicTypeIdentifierBiologicalSex)!,
        HKObjectType.characteristicTypeForIdentifier(HKCharacteristicTypeIdentifierFitzpatrickSkinType)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierActiveEnergyBurned)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBasalBodyTemperature)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBasalEnergyBurned)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodAlcoholContent)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodGlucose)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodPressureDiastolic)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodPressureSystolic)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyFatPercentage)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyMass)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyMassIndex)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyTemperature)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryBiotin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCalcium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCaffeine)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCarbohydrates)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCholesterol)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryChloride)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryChromium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCopper)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryEnergyConsumed)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatMonounsaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatPolyunsaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatSaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatTotal)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFiber)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFolate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryIodine)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryIron)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryMagnesium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryManganese)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryMolybdenum)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryNiacin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPantothenicAcid)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPhosphorus)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPotassium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryProtein)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryRiboflavin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySelenium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySodium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySugar)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryThiamin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminA)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminB12)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminB6)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminC)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminD)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminE)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminK)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryWater)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryZinc)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDistanceWalkingRunning)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierElectrodermalActivity)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierFlightsClimbed)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierForcedExpiratoryVolume1)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierForcedVitalCapacity)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierHeartRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierHeight)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierInhalerUsage)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierLeanBodyMass)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierNikeFuel)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierNumberOfTimesFallen)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierOxygenSaturation)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierPeakExpiratoryFlowRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierPeripheralPerfusionIndex)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierRespiratoryRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierUVExposure)!,
        HKObjectType.workoutType()
    ]

    public let healthKitTypesToWrite : Set<HKSampleType>? = [
        HKObjectType.categoryTypeForIdentifier(HKCategoryTypeIdentifierSleepAnalysis)!,
        HKQuantityType.workoutType()
    ]

    // Note: these are in alphabetical order within each type.
    public let healthKitTypesToObserve : [HKSampleType] = [
        HKObjectType.categoryTypeForIdentifier(HKCategoryTypeIdentifierSleepAnalysis)!,
        HKObjectType.categoryTypeForIdentifier(HKCategoryTypeIdentifierAppleStandHour)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierActiveEnergyBurned)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBasalBodyTemperature)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBasalEnergyBurned)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodAlcoholContent)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodGlucose)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodPressureDiastolic)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBloodPressureSystolic)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyFatPercentage)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyMass)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyMassIndex)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierBodyTemperature)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryBiotin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCalcium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCaffeine)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCarbohydrates)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCholesterol)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryChloride)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryChromium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryCopper)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryEnergyConsumed)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatMonounsaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatPolyunsaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatSaturated)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFatTotal)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFiber)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryFolate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryIodine)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryIron)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryMagnesium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryManganese)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryMolybdenum)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryNiacin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPantothenicAcid)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPhosphorus)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryPotassium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryProtein)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryRiboflavin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySelenium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySodium)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietarySugar)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryThiamin)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminA)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminB12)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminB6)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminC)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminD)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminE)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryVitaminK)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryWater)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDietaryZinc)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierDistanceWalkingRunning)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierElectrodermalActivity)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierFlightsClimbed)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierForcedExpiratoryVolume1)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierForcedVitalCapacity)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierHeartRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierHeight)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierInhalerUsage)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierLeanBodyMass)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierNikeFuel)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierNumberOfTimesFallen)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierOxygenSaturation)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierPeakExpiratoryFlowRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierPeripheralPerfusionIndex)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierRespiratoryRate)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)!,
        HKObjectType.quantityTypeForIdentifier(HKQuantityTypeIdentifierUVExposure)!,
        HKObjectType.workoutType()
    ]

    // Note: these are in alphabetical order within each type.
    public let healthKitShortNames : [String: String] = [
        HKCategoryTypeIdentifierAppleStandHour            : "Stood",
        HKCategoryTypeIdentifierSleepAnalysis             : "Sleep",
        HKCharacteristicTypeIdentifierBloodType           : "Blood type",
        HKCharacteristicTypeIdentifierBiologicalSex       : "Sex",
        HKCharacteristicTypeIdentifierFitzpatrickSkinType : "Skin type",
        HKCorrelationTypeIdentifierBloodPressure          : "BP",
        HKQuantityTypeIdentifierActiveEnergyBurned        : "Cal burned",
        HKQuantityTypeIdentifierBasalBodyTemperature      : "Temperature(B)",
        HKQuantityTypeIdentifierBasalEnergyBurned         : "Cal burned(B)",
        HKQuantityTypeIdentifierBloodAlcoholContent       : "BAC",
        HKQuantityTypeIdentifierBloodGlucose              : "Glucose",
        HKQuantityTypeIdentifierBloodPressureDiastolic    : "BP Diastolic",
        HKQuantityTypeIdentifierBloodPressureSystolic     : "BP Systolic",
        HKQuantityTypeIdentifierBodyFatPercentage         : "Body Fat",
        HKQuantityTypeIdentifierBodyMass                  : "Weight",
        HKQuantityTypeIdentifierBodyMassIndex             : "BMI",
        HKQuantityTypeIdentifierBodyTemperature           : "Temperature",
        HKQuantityTypeIdentifierDietaryBiotin             : "Biotin",
        HKQuantityTypeIdentifierDietaryCalcium            : "Calcium",
        HKQuantityTypeIdentifierDietaryCaffeine           : "Caffeine",
        HKQuantityTypeIdentifierDietaryCarbohydrates      : "Carbs",
        HKQuantityTypeIdentifierDietaryCholesterol        : "Cholesterol",
        HKQuantityTypeIdentifierDietaryChloride           : "Chloride",
        HKQuantityTypeIdentifierDietaryChromium           : "Chromium",
        HKQuantityTypeIdentifierDietaryCopper             : "Copper",
        HKQuantityTypeIdentifierDietaryEnergyConsumed     : "Net Calories",
        HKQuantityTypeIdentifierDietaryFatMonounsaturated : "Fat(MS)",
        HKQuantityTypeIdentifierDietaryFatPolyunsaturated : "Fat(PS)",
        HKQuantityTypeIdentifierDietaryFatSaturated       : "Fat(S)",
        HKQuantityTypeIdentifierDietaryFatTotal           : "Fat",
        HKQuantityTypeIdentifierDietaryFiber              : "Fiber",
        HKQuantityTypeIdentifierDietaryFolate             : "Folate",
        HKQuantityTypeIdentifierDietaryIodine             : "Iodine",
        HKQuantityTypeIdentifierDietaryIron               : "Iron",
        HKQuantityTypeIdentifierDietaryMagnesium          : "Magnesium",
        HKQuantityTypeIdentifierDietaryManganese          : "Manganese",
        HKQuantityTypeIdentifierDietaryMolybdenum         : "Molybdenum",
        HKQuantityTypeIdentifierDietaryNiacin             : "Niacin",
        HKQuantityTypeIdentifierDietaryPantothenicAcid    : "Pant. Acid",
        HKQuantityTypeIdentifierDietaryPhosphorus         : "Phosphorus",
        HKQuantityTypeIdentifierDietaryPotassium          : "Potassium",
        HKQuantityTypeIdentifierDietaryProtein            : "Protein",
        HKQuantityTypeIdentifierDietaryRiboflavin         : "Riboflavin",
        HKQuantityTypeIdentifierDietarySelenium           : "Selenium",
        HKQuantityTypeIdentifierDietarySodium             : "Salt",
        HKQuantityTypeIdentifierDietarySugar              : "Sugar",
        HKQuantityTypeIdentifierDietaryThiamin            : "Thiamin",
        HKQuantityTypeIdentifierDietaryVitaminA           : "Vit. A",
        HKQuantityTypeIdentifierDietaryVitaminB12         : "Vit. B12",
        HKQuantityTypeIdentifierDietaryVitaminB6          : "Vit. B6",
        HKQuantityTypeIdentifierDietaryVitaminC           : "Vit. C",
        HKQuantityTypeIdentifierDietaryVitaminD           : "Vit. D",
        HKQuantityTypeIdentifierDietaryVitaminE           : "Vit. E",
        HKQuantityTypeIdentifierDietaryVitaminK           : "Vit. K",
        HKQuantityTypeIdentifierDietaryWater              : "Water",
        HKQuantityTypeIdentifierDietaryZinc               : "Zinc",
        HKQuantityTypeIdentifierDistanceWalkingRunning    : "Distance",
        HKQuantityTypeIdentifierElectrodermalActivity     : "Electrodermal",
        HKQuantityTypeIdentifierFlightsClimbed            : "Climbed",
        HKQuantityTypeIdentifierForcedExpiratoryVolume1   : "Exp. Volume",
        HKQuantityTypeIdentifierForcedVitalCapacity       : "Vital Capacity",
        HKQuantityTypeIdentifierHeartRate                 : "Heart rate",
        HKQuantityTypeIdentifierHeight                    : "Height",
        HKQuantityTypeIdentifierInhalerUsage              : "Inhaler",
        HKQuantityTypeIdentifierLeanBodyMass              : "Lean Weight",
        HKQuantityTypeIdentifierNikeFuel                  : "Nike Fuel",
        HKQuantityTypeIdentifierNumberOfTimesFallen       : "Fallen",
        HKQuantityTypeIdentifierOxygenSaturation          : "Oxygen",
        HKQuantityTypeIdentifierPeakExpiratoryFlowRate    : "Exp. Flow",
        HKQuantityTypeIdentifierPeripheralPerfusionIndex  : "Perfusion",
        HKQuantityTypeIdentifierRespiratoryRate           : "Respiratory",
        HKQuantityTypeIdentifierStepCount                 : "Steps",
        HKQuantityTypeIdentifierUVExposure                : "Light",
        HKObjectType.workoutType().identifier             : "Workouts/Meals"
    ]

    // Note: We use strings as short ids to be compatible with JSON dictionary keys.
    public let healthKitShortIds : [String: String] = [
        HKCategoryTypeIdentifierSleepAnalysis             : "0",
        HKCategoryTypeIdentifierAppleStandHour            : "1",
        HKQuantityTypeIdentifierActiveEnergyBurned        : "2",
        HKQuantityTypeIdentifierBasalBodyTemperature      : "3",
        HKQuantityTypeIdentifierBasalEnergyBurned         : "4",
        HKQuantityTypeIdentifierBloodAlcoholContent       : "5",
        HKQuantityTypeIdentifierBloodGlucose              : "6",
        HKQuantityTypeIdentifierBloodPressureDiastolic    : "7",
        HKQuantityTypeIdentifierBloodPressureSystolic     : "8",
        HKQuantityTypeIdentifierBodyFatPercentage         : "9",
        HKQuantityTypeIdentifierBodyMass                  : "10",
        HKQuantityTypeIdentifierBodyMassIndex             : "11",
        HKQuantityTypeIdentifierBodyTemperature           : "12",
        HKQuantityTypeIdentifierDietaryBiotin             : "13",
        HKQuantityTypeIdentifierDietaryCalcium            : "14",
        HKQuantityTypeIdentifierDietaryCaffeine           : "15",
        HKQuantityTypeIdentifierDietaryCarbohydrates      : "16",
        HKQuantityTypeIdentifierDietaryCholesterol        : "17",
        HKQuantityTypeIdentifierDietaryChloride           : "18",
        HKQuantityTypeIdentifierDietaryChromium           : "19",
        HKQuantityTypeIdentifierDietaryCopper             : "20",
        HKQuantityTypeIdentifierDietaryEnergyConsumed     : "21",
        HKQuantityTypeIdentifierDietaryFatMonounsaturated : "22",
        HKQuantityTypeIdentifierDietaryFatPolyunsaturated : "23",
        HKQuantityTypeIdentifierDietaryFatSaturated       : "24",
        HKQuantityTypeIdentifierDietaryFatTotal           : "25",
        HKQuantityTypeIdentifierDietaryFiber              : "26",
        HKQuantityTypeIdentifierDietaryFolate             : "27",
        HKQuantityTypeIdentifierDietaryIodine             : "28",
        HKQuantityTypeIdentifierDietaryIron               : "29",
        HKQuantityTypeIdentifierDietaryMagnesium          : "30",
        HKQuantityTypeIdentifierDietaryManganese          : "31",
        HKQuantityTypeIdentifierDietaryMolybdenum         : "32",
        HKQuantityTypeIdentifierDietaryNiacin             : "33",
        HKQuantityTypeIdentifierDietaryPantothenicAcid    : "34",
        HKQuantityTypeIdentifierDietaryPhosphorus         : "35",
        HKQuantityTypeIdentifierDietaryPotassium          : "36",
        HKQuantityTypeIdentifierDietaryProtein            : "37",
        HKQuantityTypeIdentifierDietaryRiboflavin         : "38",
        HKQuantityTypeIdentifierDietarySelenium           : "39",
        HKQuantityTypeIdentifierDietarySodium             : "40",
        HKQuantityTypeIdentifierDietarySugar              : "41",
        HKQuantityTypeIdentifierDietaryThiamin            : "42",
        HKQuantityTypeIdentifierDietaryVitaminA           : "43",
        HKQuantityTypeIdentifierDietaryVitaminB12         : "44",
        HKQuantityTypeIdentifierDietaryVitaminB6          : "45",
        HKQuantityTypeIdentifierDietaryVitaminC           : "46",
        HKQuantityTypeIdentifierDietaryVitaminD           : "47",
        HKQuantityTypeIdentifierDietaryVitaminE           : "48",
        HKQuantityTypeIdentifierDietaryVitaminK           : "49",
        HKQuantityTypeIdentifierDietaryWater              : "50",
        HKQuantityTypeIdentifierDietaryZinc               : "51",
        HKQuantityTypeIdentifierDistanceWalkingRunning    : "52",
        HKQuantityTypeIdentifierElectrodermalActivity     : "53",
        HKQuantityTypeIdentifierFlightsClimbed            : "54",
        HKQuantityTypeIdentifierForcedExpiratoryVolume1   : "55",
        HKQuantityTypeIdentifierForcedVitalCapacity       : "56",
        HKQuantityTypeIdentifierHeartRate                 : "57",
        HKQuantityTypeIdentifierHeight                    : "58",
        HKQuantityTypeIdentifierInhalerUsage              : "59",
        HKQuantityTypeIdentifierLeanBodyMass              : "60",
        HKQuantityTypeIdentifierNikeFuel                  : "61",
        HKQuantityTypeIdentifierNumberOfTimesFallen       : "62",
        HKQuantityTypeIdentifierOxygenSaturation          : "63",
        HKQuantityTypeIdentifierPeakExpiratoryFlowRate    : "64",
        HKQuantityTypeIdentifierPeripheralPerfusionIndex  : "65",
        HKQuantityTypeIdentifierRespiratoryRate           : "66",
        HKQuantityTypeIdentifierStepCount                 : "67",
        HKQuantityTypeIdentifierUVExposure                : "68",
        HKObjectType.workoutType().identifier             : "69",
    ]
}

/*
 * HealthKit predicates
 */

// Helper predicates
public let mealsPredicate = HKQuery.predicateForWorkoutsWithWorkoutActivityType(HKWorkoutActivityType.PreparationAndRecovery)

public let exerciseConjuncts = [
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.AmericanFootball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Archery),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.AustralianFootball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Badminton),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Baseball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Basketball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Bowling),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Boxing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Climbing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Cricket),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.CrossTraining),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Curling),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Cycling),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Dance),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.DanceInspiredTraining),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Elliptical),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.EquestrianSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Fencing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Fishing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.FunctionalStrengthTraining),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Golf),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Gymnastics),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Handball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Hiking),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Hockey),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Hunting),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Lacrosse),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.MartialArts),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.MindAndBody),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.MixedMetabolicCardioTraining),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.PaddleSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Play),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Racquetball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Rowing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Rugby),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Running),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Sailing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.SkatingSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.SnowSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Soccer),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Softball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Squash),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.StairClimbing),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.SurfingSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Swimming),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.TableTennis),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Tennis),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.TrackAndField),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.TraditionalStrengthTraining),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Volleyball),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Walking),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.WaterFitness),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.WaterPolo),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.WaterSports),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Wrestling),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Yoga),
    HKQuery.predicateForWorkoutsWithWorkoutActivityType(.Other),
]

public let exercisePredicate = NSCompoundPredicate(orPredicateWithSubpredicates: exerciseConjuncts)


public let asleepPredicate = HKQuery.predicateForCategorySamplesWithOperatorType(.EqualToPredicateOperatorType, value: HKCategoryValueSleepAnalysis.Asleep.rawValue)
