# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.56.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Install FixCode for c&p management"
  lane :setupxcode do
    install_xcode_plugin(
      url: "https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip"
    )
  end

  desc "Clean DerivedData"
  lane :cleanderived do
    clear_derived_data
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Fastlane/match execution"
  private_lane :circatormatches do |options|
    type = options[:type]

    match(type: type, app_identifier: "edu.jhu.cs.damsl.Circator.dev8")
    match(type: type, app_identifier: "edu.jhu.cs.damsl.CircatorKit")
    match(type: type, app_identifier: "edu.jhu.cs.damsl.Circator.dev8.watchkitapp2")
    match(type: type, app_identifier: "edu.jhu.cs.damsl.Circator.dev8.watchkitapp2.watchextension")
  end

  desc "Build locally from the command line"
  lane :build do
    cocoapods
    circatormatches(type: "development")
    gym(scheme: "Circator")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    cocoapods
    circatormatches(type: "appstore")
    gym(scheme: "Circator")
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    cocoapods
    circatormatches(type: "appstore")
    # snapshot
    gym(scheme: "Circator")
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
